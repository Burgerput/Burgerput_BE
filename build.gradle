plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.0'
    id 'io.spring.dependency-management' version '1.1.0'
//
//	id 'com.github.node-gradle.node' version '3.4.0'	// add for npm


}

group = 'sample'
version = '0.0.2-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}
test{
    useJUnitPlatform()
}
dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'junit:junit:4.13.1'
    compileOnly 'org.projectlombok:lombok'

    //JWT토큰을 위해 필요한 의존성들
    implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.2'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.2'
    implementation 'javax.xml.bind:jaxb-api:2.3.1'
    implementation 'org.glassfish.jaxb:jaxb-runtime:2.3.1'

    implementation 'javax.annotation:javax.annotation-api:1.3.2'
    compileOnly 'jakarta.servlet:jakarta.servlet-api:5.0.0'

    annotationProcessor 'org.projectlombok:lombok'

    //Test라이브러리
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'


    //selenium setting
//	implementation group: 'org.seleniumhq.selenium', name: 'selenium-java', version:
    // https://mavenlibs.com/maven/dependency/org.seleniumhq.selenium/selenium-devtools-v86
//Thanks for using https://jar-download.com

    //	implementation 'org.seleniumhq.selenium:selenium-java:3.141.59'
    implementation group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '4.15.0'

    //webDriverManger
    implementation group: 'io.github.bonigarcia', name: 'webdrivermanager', version: '5.6.2'

    //Spring test Sl4fj
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    //JSON Data parsing dependency
    implementation('org.springframework.boot:spring-boot-starter-web')

    //=========DB셋
    //JPA, 스프링 데이터 JPA 추가
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    //H2 데이터베이스 추가
    runtimeOnly 'com.h2database:h2'

//	//For using mysql
    implementation 'mysql:mysql-connector-java:8.0.33'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'


    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    //thymeleaf
    implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect'

    //without tomcat reload
    implementation group: 'org.springframework', name: 'springloaded', version: '1.2.6.RELEASE'


    //json
    implementation 'org.json:json:20211205'

//	//For using mysql
//	implementation 'mysql:mysql-connector-java'
//	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

}
//
//tasks.named('test') {
//    useJUnitPlatform()
//}
//
////jar Settings
////bootJar {
////	mainClass = 'burgerput.project.BurgerputProjectApplication'
////}
//
////react - Spring boot Settings
//
//def reactDir = "$projectDir/src/main/frontend";
//
//sourceSets {
//    main {
//        resources {
//            srcDirs = ["$projectDir/src/main/resources"]
//        }
//    }
//}
//
//processResources {
//    dependsOn "copyReactBuildFiles"
//}
//
//task installReact(type: Exec) {
//    workingDir "$reactDir"
//    inputs.dir "$reactDir"
//    group = BasePlugin.BUILD_GROUP
//
//    if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
//        commandLine "yarn.cmd", "audit", "fix"
//        commandLine 'yarn.cmd', 'install'
//    } else {
//        commandLine "yarn", "audit", "fix"
//        commandLine 'yarn', 'install' +
//                '' +
//                '' +
//                '' +
//                ''
//    }
//}
//
//task buildReact(type: Exec) {
//    dependsOn "installReact"
//    workingDir "$reactDir"
//    inputs.dir "$reactDir"
//    group = BasePlugin.BUILD_GROUP
//
//    if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
////		commandLine "yarn.cmd", "audit", "fix" // added
//        commandLine "yarn.cmd", "run", "build"
//    } else {
////		commandLine "yarn.cmd", "audit", "fix" //added
//        commandLine "yarn", "run", "build"
//    }
//}
//
//task copyReactBuildFiles(type: Copy) {
//    dependsOn "buildReact"
//    from "$reactDir/dist"
//    into "$projectDir/src/main/resources/static"
//}
//
//tasks.bootJar {
//    dependsOn "copyReactBuildFiles"
//}
//
//
